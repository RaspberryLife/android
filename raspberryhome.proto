package protobuf;
// ========================================
// Optional parameters for java compilation
// ========================================
option java_package = "protobuf";
option java_outer_classname = "RBHproto";

// ========================================
// General RBHMessage
// ========================================
message RBHMessage {
	required string id = 1;
    required MessageType mType = 2 [default = PLAIN_TEXT];

    optional PlainText plainText = 3;
	optional RegisterInstructionObserver registerInstructionObserver = 4;
	optional RunInstruction runInstruction = 5;
	optional RegisterDataField registerDataField = 6;
	optional UpdateDataField updateDataField = 7;
	optional DataSet dataSet = 8;
}

enum MessageType {
    PLAIN_TEXT = 0;
    REGISTER_INSTRUCTION_OBSERVER = 1;
    RUN_INSTRUCTION = 2;
	REGISTER_DATA_FIELD = 3;
	UPDATE_DATA_FIELD = 4;
	GET_DATA_SET = 5;
	DATA_SET = 6;
    AUTH_REQUEST = 7;
    AUTH_DENIED = 8;
    AUTH_ACCEPT = 9;
}
// ========================================
// General
// ========================================

// Plaintext subtype for general purpose
message PlainText {
    required string text = 1;
}

// ========================================
// Instruction subtypes
// ========================================
message Instruction {
	required string instruction = 1;
	repeated string stringParameters = 2;
	repeated int32 intParameters = 3;
}

message RegisterInstructionObserver {
    required string moduleID = 1;
    repeated Instruction instructions = 2;
}

message RunInstruction {
	required string target = 1;
	required Instruction instruction = 2;
}

// ========================================
// Data subtypes
// ========================================
enum DataType {
	INTEGER = 0;
	FLOAT = 1;
	STRING = 2;
}
	
message Data {
	required DataType dType = 1;
	optional string stringData = 2;
	optional int32 int32Data = 3;
	optional float floatData = 4; 
}

message RegisterDataField {
	required string fieldName = 1;
	required DataType dType = 2;
}

// Always update with the same DataType!
message UpdateDataField {
	required string fieldName = 1;
	required Data data = 2;
}

message DataSet {
	repeated float values = 1;
}







